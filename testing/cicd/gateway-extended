    pipeline {
            parameters {
                string( name: 'GW_BRANCH',
                defaultValue: '*/develop',
                description: 'target GW branch to install')

                string( name: 'FE_BRANCH',
                defaultValue: '*/develop',
                description: 'target FE branch to install')

                string( name: 'REPO_NAME',
                defaultValue: '',
                description: 'target repo to install')
            }

        agent { node { label 'master' } }
        stages{
            stage ('prepare environment') {
        	    steps{
         	        build job: 'prepare-env', parameters: [[$class: 'StringParameterValue', name: 'GW_BRANCH', value: params.GW_BRANCH],
         	                                               [$class: 'StringParameterValue', name: 'FE_BRANCH', value: params.FE_BRANCH]]
        	    }
        	}
        	stage ('gateway unit tests running') {
        	    steps{
                    build job: 'gateway-unittest-runner', propagate: false
        	    }
            }

            stage ('gateway integration tests running') {
        	    steps{
                    build job: 'gateway-integration', parameters: [[$class: 'StringParameterValue', name: 'NAME', value: 'gateway'],
         	                                                       [$class: 'StringParameterValue', name: 'TEST', value: '["io_test.test_how_healthy_after_reboot","login_test.test_create_user_authorized_force_checked","rooms_test.test_set_output_configurations_rooms_floors","rooms_test.test_set_all_lights_floor_on","rooms_test.test_set_all_lights_floor_off","actions_test.test_execute_group_action","actions_test.test_toggles_output","actions_test.test_turn_output_on_off","actions_test.test_toggles_all_outputs","actions_test.test_turn_all_outputs_on_off","actions_test.test_toggles_all_outputs_floor","actions_test.test_turn_all_outputs_on_off_floor","actions_test.test_turn_all_outputs_off","actions_test.test_execute_group_actions_after_xtime"]'
                                                                  ]]
        	    }
            }
        }
        post {
            always {
                githubNotify account: 'openmotics', context: '@openmotics-ci', credentialsId: '054a9d2a-8534-44f7-861f-106e7f0fc328',
                             description: 'Building the buildings...', repo: 'dummy-jenkins-test', sha: '6b156bf8a3c050e94a0adf15b680d8da4d69111d',
                             status: 'SUCCESS', targetUrl: 'https://jenkins.openmotics.com'

                sh '''
                    curl --header "Content-Type: application/json" --request POST --data '{"body": "Failed.", "event": "REQUEST_CHANGES"}' https://openmotics-ci:4067f6210d379c1098e46a4f629a16a4afbc0a30@api.github.com/repos/openmotics/dummy-jenkins-test/pulls/1/reviews/202163045/events
                '''
            }
        }
  }
