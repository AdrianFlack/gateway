    pipeline {
            parameters {
                string( name: 'GW_BRANCH',
                defaultValue: '',
                description: 'target GW branch to install')

                string( name: 'FE_BRANCH',
                defaultValue: '',
                description: 'target FE branch to install')

                string( name: 'REPO_NAME',
                defaultValue: '',
                description: 'target repo to install')

                string( name: 'PULL',
                defaultValue: '',
                description: 'Current pull request ID.')
            }

        agent { node { label 'master' } }
        options { disableConcurrentBuilds() }
        stages{
            stage ('Notify build in progress on GitHub') {
        	    steps{
              withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: '054a9d2a-8534-44f7-861f-106e7f0fc328',
                    usernameVariable: 'USERNAME', passwordVariable: 'TOKEN']]) {

                    sh "curl --header 'Content-Type: application/json' --request POST --data '{\"body\": \"Please wait: Building and running tests...\", \"event\": \"REQUEST_CHANGES\"}' https://${USERNAME}:${TOKEN}@api.github.com/repos/openmotics/dummy-jenkins-test/pulls/${params.PULL}/reviews"
                 }
        	    }
        	}
            stage ('prepare environment') {
        	    steps{
         	        build job: 'prepare-env', parameters: [[$class: 'StringParameterValue', name: 'GW_BRANCH', value: params.GW_BRANCH],
         	                                               [$class: 'StringParameterValue', name: 'FE_BRANCH', value: params.FE_BRANCH]]
        	    }
        	}
        	stage ('gateway unit tests running') {
        	    steps{
                    build job: 'gateway-unittest-runner'
        	    }
            }

            stage ('gateway integration tests running') {
        	    steps{
                    build job: 'gateway-integration', parameters: [[$class: 'StringParameterValue', name: 'NAME', value: 'gateway'],
         	                                                       [$class: 'StringParameterValue', name: 'TEST', value: '["io_test.test_how_healthy_after_reboot","login_test.test_create_user_authorized_force_checked","rooms_test.test_set_output_configurations_rooms_floors","rooms_test.test_set_all_lights_floor_on","rooms_test.test_set_all_lights_floor_off","actions_test.test_execute_group_action","actions_test.test_toggles_output","actions_test.test_turn_output_on_off","actions_test.test_toggles_all_outputs","actions_test.test_turn_all_outputs_on_off","actions_test.test_toggles_all_outputs_floor","actions_test.test_turn_all_outputs_on_off_floor","actions_test.test_turn_all_outputs_off","actions_test.test_execute_group_actions_after_xtime"]'
                                                                  ]]
        	    }
            }
        }
        post {
            failure {

                      withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: '054a9d2a-8534-44f7-861f-106e7f0fc328',
                usernameVariable: 'USERNAME', passwordVariable: 'TOKEN']]) {

                sh "curl --header 'Content-Type: application/json' --request POST --data '{\"body\": \"One or more tests have failed.\", \"event\": \"REQUEST_CHANGES\"}' https://${USERNAME}:${TOKEN}@api.github.com/repos/openmotics/dummy-jenkins-test/pulls/${params.PULL}/reviews"
                 }

            }

            success {

                      withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: '054a9d2a-8534-44f7-861f-106e7f0fc328',
                usernameVariable: 'USERNAME', passwordVariable: 'TOKEN']]) {

                sh "curl --header 'Content-Type: application/json' --request POST --data '{\"body\": \"All extended tests have passed.\", \"event\": \"APPROVE\"}' https://${USERNAME}:${TOKEN}@api.github.com/repos/openmotics/dummy-jenkins-test/pulls/${params.PULL}/reviews"
                 }

            }
        }
  }
